# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet _nbtest
#define MORE_COFFEE
#define WITH_MOCKING
#include "../include/$1.h"
#include "../nobuild.h"

int main() {
	DESCRIBE("$1");
	SHOULDB("work", {
		ASSERT(1 == 1);
	});
	RETURN();
}

endsnippet

snippet _main
int main(int argc, char ** argv) {
	$0
	return 0;
}
endsnippet

snippet _for
for (int i =0; i < ${1:length}; i++)
{
	$0
}
endsnippet

snippet	_forward
${2:void} ${1:name}(${3:parameters});
endsnippet

snippet _func
${2:void} ${1:name}(${3:parameters}) {
	$0
}

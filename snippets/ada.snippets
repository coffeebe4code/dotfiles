# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
snippet ./wiu "with and use" 
with ${1}; use ${1};
${0}
endsnippet

snippet ./wi "with"
with ${1};
${0}
endsnippet

snippet ./pro0 "procedure 0 arguments"
procedure ${1}  is
${2}
begin
${0}
end ${1};
endsnippet

snippet ./pro1 "procedure w many arguments"
procedure ${1} (${2}) is
${3}
begin
${0}
end ${1};
endsnippet


snippet ./pack "package w/o body"
package ${1} is
${0}
end ${1};
endsnippet

snippet ./packb "package w body"
package body ${1} is
${0}
end ${1};
endsnippet

snippet ./f0 "function w 0 arguments"
function ${1} return ${2} is
${3}
begin
${0}
end ${1};
endsnippet

snippet ./f1 "function w many arguments"
function ${1} (${2})return ${3} is
${4}
begin
${0}
end ${1};
endsnippet

snippet ./rec "record type"
type ${1} is record
	${0}
end record;
endsnippet


